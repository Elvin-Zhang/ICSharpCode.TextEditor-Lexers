;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
; This program demonstrates the use of the stack.
; Rob Frohne November, 2015
; This program is to play around and see how the stack is manipulated.  Try it!
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov    #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov    #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
            mov     #0xffff,r6
            mov     #0x000f,r7
loop1       push    r6
            dec     r7
            jnz     loop1

            mov     #0x000f,r7
loop2       pop     r6
            dec     r7
            jnz     loop2

            mov     #0x0004,r4
            mov     #0x0005,r5
            mov     #0xff06,r6
            call    #subroutine1
            mov     r4,&0x43f2
            jmp $

subroutine1 push    r4
            push    r5
            push    r6
            mov     #0x4444,r4
            mov     #0x5555,r5
            mov     #0x6666,r6
            pop     r6
            pop     r5
            pop     r4
            ret

                                            

;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
